  <div class="row">
    <div class="col-xs-4 text-center">
      <div class="well ">
      <strong> Your Cluster</strong>
      <% cluster.profiles.each do |profile| %>
      <p> <%= link_to profile.nickname, profile_path(profile) %> </p>
      <% end %>
      </div>
      <%= link_to "Your Cluster Chat", cluster_path(cluster), remote: :true %>
      <div class="well" id="groups">
        <strong>Inner Cluster Chat Groups</strong>
        <% current_user.profile.groups.includes(:profiles).each do |group| %>
        <%= render 'group', group: group %>
             <% end %>
      </div>
   <%= simple_form_for [cluster, group], remote: true do |f| %>
        <%= f.input :profiles, label: "New Inner Chat", collection: cluster.profiles, collection: cluster.profiles.reject{|p| p == current_user.profile }, label_method: :nickname, value_method: :id, multiple: true,   as: :check_boxes%>
  <%= f.error_notification %>
        <%= f.button :submit, class: 'btn btn-default' %>

   <% end %>
    </div>
    <div  class="col-xs-7 col-xs-offset-1">
      <div class="text-center" id="message-form">
      <%= simple_form_for message, url: cluster_cluster_message_path(cluster), method: :post, remote: true do |f| %>
        <%= f.input :body, label: "message to your cluster" %>
          <%= f.error_notification %>

        <%= f.button :submit, class: 'btn btn-default' %>
      <% end %>
      </div>
      <br>
      <div class="well text-center"  id="messages">
        <% cluster.messages.order(created_at: :desc).each do |message| %>

          <%= render 'message', message: message%>
        <% end %>
      </div>

    </div>

  </div>
<% content_for :after_js do %>
  <script>
    function cons(){

    console.log('in script show');
     }
     cons();
    App['cluster_room_<%= cluster.id %>'] = App.cable.subscriptions.create(
      { channel: 'ClusterRoomsChannel' , cluster_room_id: <%= cluster.id %> },
      { received: (data) => {
       var messagesNode = document.getElementById('messages');
       document.getElementById('message_body').value = "";
        messagesNode.insertAdjacentHTML('afterbegin',data.message_partial);
            scrollLastMessageIntoView();
       } }  )
  </script>
<% end %>
